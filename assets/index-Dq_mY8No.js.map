{"version":3,"file":"index-Dq_mY8No.js","sources":["../../node_modules/react-dom/client.js","../../src/lib/utils.js","../../src/components/ui/card.jsx","../../node_modules/class-variance-authority/dist/index.mjs","../../src/components/ui/button.jsx","../../src/components/ui/tabs.jsx","../../src/components/ui/alert.jsx","../../src/components/TimeseriesUploader.jsx","../../src/components/ui/table.jsx","../../src/components/ui/select.jsx","../../src/components/PageTimeseriesView.jsx","../../src/components/MonthlyComparisonView.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\n/**\n * Kombinerar CSS-klasser och hanterar Tailwind-konflikter\n * @param  {...any} inputs - CSS-klasser att kombinera\n * @returns {string} - Kombinerade CSS-klasser\n */\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Formaterar ett datum enligt svensk standard\n * @param {Date|string} date - Datum att formatera\n * @returns {string} - Formaterat datum\n */\nexport function formatDate(date) {\n  const d = new Date(date)\n  return d.toLocaleDateString('sv-SE', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })\n}\n\n/**\n * Formaterar ett nummer med tusentalsavgränsare\n * @param {number} number - Nummer att formatera\n * @returns {string} - Formaterat nummer\n */\nexport function formatNumber(number) {\n  return new Intl.NumberFormat('sv-SE').format(number)\n}\n\n/**\n * Validerar en CSV-fil\n * @param {File} file - Filen att validera\n * @returns {boolean} - true om filen är giltig\n */\nexport function isValidCSVFile(file) {\n  return file && (\n    file.type === 'text/csv' ||\n    file.name.toLowerCase().endsWith('.csv')\n  )\n}\n\n/**\n * Genererar en unik ID-sträng\n * @returns {string} - Unik ID\n */\nexport function generateId() {\n  return Math.random().toString(36).substring(2) + Date.now().toString(36)\n}\n\n/**\n * Formaterar månadsnamn för visning\n * @param {number} monthNumber - Månadsnummer (1-12)\n * @returns {string} - Formaterat månadsnamn på svenska\n */\nexport function formatMonthName(monthNumber) {\n  const months = [\n    'Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni',\n    'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'\n  ]\n  return months[monthNumber - 1] || 'Okänd månad'\n}\n\n/**\n * Formaterar period för visning (år och månad)\n * @param {number} year - År\n * @param {number} month - Månad (1-12)\n * @returns {string} - Formaterad period\n */\nexport function formatPeriod(year, month) {\n  return `${formatMonthName(month)} ${year}`\n}","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\n/**\n * Huvudkomponent för Card\n */\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\n/**\n * Header för Card\n */\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\n/**\n * Titel för Card\n */\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\n/**\n * Beskrivning för Card\n */\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\n/**\n * Innehållssektion för Card\n */\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\n/**\n * Footer för Card\n */\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"underline-offset-4 hover:underline text-primary\",\n        facebook: \"bg-facebook-500 text-white hover:bg-facebook-600\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n  return (\n    <Comp\n      className={cn(buttonVariants({ variant, size, className }))}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","import * as React from \"react\"\nimport { cva } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\n// Variant-definitioner för olika alert-typer\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        success: \"border-green-500/50 text-green-600 dark:text-green-400 [&>svg]:text-green-600\",\n        info: \"border-facebook-300/50 text-facebook-600 dark:text-facebook-400 [&>svg]:text-facebook-600\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\n/**\n * Alert-komponent för att visa viktiga meddelanden\n * @param {Object} props - Komponentens properties\n * @param {string} [props.variant] - Variant av alert (default, destructive, success, info)\n * @param {React.ReactNode} props.children - Innehåll att visa i alerten\n * @param {string} [props.className] - Extra CSS-klasser\n */\nconst Alert = React.forwardRef(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\n/**\n * Titel-komponent för Alert\n */\nconst AlertTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\n/**\n * Beskrivnings-komponent för Alert\n */\nconst AlertDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }","import React, { useState, useRef } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Alert, AlertDescription, AlertTitle } from './ui/alert';\nimport { \n  Upload, \n  FileText, \n  CheckCircle2, \n  AlertCircle, \n  X, \n  Calendar,\n  BarChart3,\n  Loader2\n} from 'lucide-react';\nimport Papa from 'papaparse';\n\n// Förväntade kolumner för Facebook API CSV-filer\nconst EXPECTED_COLUMNS = [\n  'Page', 'Page ID', 'Reach', 'Engaged Users', 'Engagements', \n  'Reactions', 'Publications', 'Status', 'Comment'\n];\n\nfunction TimeseriesUploader({ onDataUploaded, onCancel }) {\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [dragActive, setDragActive] = useState(false);\n  const [validationErrors, setValidationErrors] = useState([]);\n  const [processingStatus, setProcessingStatus] = useState({});\n  const fileInputRef = useRef(null);\n\n  // Validera filnamn enligt FB_YYYY_MM.csv format\n  const validateFilename = (filename) => {\n    const pattern = /^FB_(\\d{4})_(\\d{2})\\.csv$/;\n    const match = filename.match(pattern);\n    \n    if (!match) {\n      return { \n        isValid: false, \n        error: 'Felaktigt filnamnsformat. Förväntat: FB_YYYY_MM.csv (t.ex. FB_2025_08.csv)' \n      };\n    }\n\n    const year = parseInt(match[1]);\n    const month = parseInt(match[2]);\n\n    if (month < 1 || month > 12) {\n      return { \n        isValid: false, \n        error: 'Ogiltig månad. Måste vara mellan 01-12.' \n      };\n    }\n\n    if (year < 2020 || year > 2030) {\n      return { \n        isValid: false, \n        error: 'Ogiltigt år. Måste vara mellan 2020-2030.' \n      };\n    }\n\n    return { \n      isValid: true, \n      year, \n      month,\n      displayName: `${getMonthName(month)} ${year}`\n    };\n  };\n\n  // Hjälpfunktion för månadsnamn på svenska\n  const getMonthName = (month) => {\n    const months = [\n      'Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni',\n      'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'\n    ];\n    return months[month - 1];\n  };\n\n  // Validera CSV-innehåll\n  const validateCSVContent = (content, filename) => {\n    return new Promise((resolve) => {\n      Papa.parse(content, {\n        header: true,\n        skipEmptyLines: true,\n        complete: (results) => {\n          if (results.errors.length > 0) {\n            resolve({\n              isValid: false,\n              error: `CSV-parsningsfel: ${results.errors[0].message}`,\n              data: null\n            });\n            return;\n          }\n\n          // Kontrollera kolumner\n          const headers = results.meta.fields || [];\n          const missingColumns = EXPECTED_COLUMNS.filter(col => !headers.includes(col));\n          \n          if (missingColumns.length > 0) {\n            resolve({\n              isValid: false,\n              error: `Saknade kolumner: ${missingColumns.join(', ')}`,\n              data: null\n            });\n            return;\n          }\n\n          // Kontrollera att det finns data\n          if (results.data.length === 0) {\n            resolve({\n              isValid: false,\n              error: 'CSV-filen innehåller ingen data',\n              data: null\n            });\n            return;\n          }\n\n          resolve({\n            isValid: true,\n            data: results.data,\n            pageCount: results.data.length,\n            error: null\n          });\n        }\n      });\n    });\n  };\n\n  // Hantera fil-drop\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    const droppedFiles = Array.from(e.dataTransfer.files);\n    const csvFiles = droppedFiles.filter(file => \n      file.name.toLowerCase().endsWith('.csv')\n    );\n    \n    if (csvFiles.length !== droppedFiles.length) {\n      setValidationErrors(prev => [...prev, 'Endast CSV-filer är tillåtna']);\n    }\n    \n    if (csvFiles.length > 0) {\n      addFiles(csvFiles);\n    }\n  };\n\n  // Hantera fil-val\n  const handleFileSelect = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    addFiles(selectedFiles);\n  };\n\n  // Lägg till filer i listan\n  const addFiles = (newFiles) => {\n    const validatedFiles = newFiles.map(file => {\n      const validation = validateFilename(file.name);\n      return {\n        file,\n        id: Math.random().toString(36),\n        name: file.name,\n        size: file.size,\n        validation,\n        status: validation.isValid ? 'pending' : 'error'\n      };\n    });\n\n    // Kontrollera dubletter\n    const existingNames = files.map(f => f.name);\n    const duplicates = validatedFiles.filter(f => existingNames.includes(f.name));\n    \n    if (duplicates.length > 0) {\n      setValidationErrors(prev => [\n        ...prev, \n        `Följande filer är redan valda: ${duplicates.map(d => d.name).join(', ')}`\n      ]);\n    }\n\n    const uniqueFiles = validatedFiles.filter(f => !existingNames.includes(f.name));\n    setFiles(prev => [...prev, ...uniqueFiles]);\n  };\n\n  // Ta bort fil från listan\n  const removeFile = (fileId) => {\n    setFiles(prev => prev.filter(f => f.id !== fileId));\n  };\n\n  // Behandla alla filer\n  const processFiles = async () => {\n    setUploading(true);\n    setValidationErrors([]);\n    setProcessingStatus({});\n\n    const validFiles = files.filter(f => f.validation.isValid);\n    const processedPeriods = [];\n\n    for (const fileItem of validFiles) {\n      setProcessingStatus(prev => ({ ...prev, [fileItem.id]: 'processing' }));\n\n      try {\n        // Läs filinnehåll\n        const content = await readFileContent(fileItem.file);\n        \n        // Validera CSV-innehåll\n        const validation = await validateCSVContent(content, fileItem.name);\n        \n        if (!validation.isValid) {\n          setProcessingStatus(prev => ({ ...prev, [fileItem.id]: 'error' }));\n          setValidationErrors(prev => [...prev, `${fileItem.name}: ${validation.error}`]);\n          continue;\n        }\n\n        // Lägg till period-info\n        const periodData = {\n          ...fileItem.validation,\n          data: validation.data,\n          pageCount: validation.pageCount,\n          filename: fileItem.name\n        };\n\n        processedPeriods.push(periodData);\n        setProcessingStatus(prev => ({ ...prev, [fileItem.id]: 'success' }));\n\n        // Simulera bearbetning (ta bort i produktion)\n        await new Promise(resolve => setTimeout(resolve, 500));\n\n      } catch (error) {\n        setProcessingStatus(prev => ({ ...prev, [fileItem.id]: 'error' }));\n        setValidationErrors(prev => [...prev, `${fileItem.name}: ${error.message}`]);\n      }\n    }\n\n    setUploading(false);\n\n    // Om någon fil behandlades framgångsrikt, rapportera tillbaka\n    if (processedPeriods.length > 0) {\n      onDataUploaded(processedPeriods);\n    }\n  };\n\n  // Läs fil-innehåll\n  const readFileContent = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => resolve(e.target.result);\n      reader.onerror = () => reject(new Error('Kunde inte läsa fil'));\n      reader.readAsText(file);\n    });\n  };\n\n  // Hantera drag events\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(true);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n  };\n\n  // Rensa fel\n  const clearErrors = () => {\n    setValidationErrors([]);\n  };\n\n  // Räkna giltiga filer\n  const validFilesCount = files.filter(f => f.validation.isValid).length;\n  const hasValidFiles = validFilesCount > 0;\n\n  return (\n    <div className=\"space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Upload className=\"h-5 w-5 text-facebook-500\" />\n            Ladda upp Facebook CSV-filer\n          </CardTitle>\n          <p className=\"text-sm text-muted-foreground\">\n            Släpp dina FB_YYYY_MM.csv filer här eller klicka för att välja filer\n          </p>\n        </CardHeader>\n        <CardContent>\n          {/* Drop Zone */}\n          <div\n            className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors cursor-pointer ${\n              dragActive \n                ? 'border-facebook-400 bg-facebook-50' \n                : 'border-gray-300 hover:border-facebook-400 hover:bg-facebook-50'\n            }`}\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onClick={() => fileInputRef.current?.click()}\n          >\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileSelect}\n              multiple\n              accept=\".csv\"\n              className=\"hidden\"\n            />\n            \n            <Upload className=\"h-12 w-12 mx-auto mb-4 text-facebook-400\" />\n            <h3 className=\"text-lg font-semibold mb-2\">\n              {dragActive ? 'Släpp filerna här' : 'Ladda upp CSV-filer'}\n            </h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Släpp dina FB_YYYY_MM.csv filer här eller klicka för att välja\n            </p>\n            \n            <div className=\"text-xs text-muted-foreground space-y-1\">\n              <p><strong>Format:</strong> FB_YYYY_MM.csv (t.ex. FB_2025_08.csv)</p>\n              <p><strong>Kolumner:</strong> {EXPECTED_COLUMNS.join(', ')}</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Fel-meddelanden */}\n      {validationErrors.length > 0 && (\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>Valideringsfel</AlertTitle>\n          <AlertDescription>\n            <ul className=\"list-disc list-inside space-y-1\">\n              {validationErrors.map((error, index) => (\n                <li key={index}>{error}</li>\n              ))}\n            </ul>\n            <Button variant=\"outline\" size=\"sm\" onClick={clearErrors} className=\"mt-2\">\n              Rensa fel\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Fil-lista */}\n      {files.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <span>Valda filer ({files.length})</span>\n              <div className=\"text-sm text-muted-foreground\">\n                {validFilesCount} giltiga filer\n              </div>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {files.map((fileItem) => {\n                const status = processingStatus[fileItem.id] || fileItem.status;\n                \n                return (\n                  <div\n                    key={fileItem.id}\n                    className={`flex items-center justify-between p-3 rounded-lg border ${\n                      fileItem.validation.isValid \n                        ? 'border-green-200 bg-green-50' \n                        : 'border-red-200 bg-red-50'\n                    }`}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <FileText className=\"h-4 w-4\" />\n                      <div>\n                        <div className=\"font-medium\">{fileItem.name}</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {fileItem.validation.isValid ? (\n                            <span className=\"flex items-center gap-1\">\n                              <Calendar className=\"h-3 w-3\" />\n                              {fileItem.validation.displayName}\n                            </span>\n                          ) : (\n                            <span className=\"text-red-600\">{fileItem.validation.error}</span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-2\">\n                      {status === 'processing' && (\n                        <Loader2 className=\"h-4 w-4 animate-spin text-blue-500\" />\n                      )}\n                      {status === 'success' && (\n                        <CheckCircle2 className=\"h-4 w-4 text-green-500\" />\n                      )}\n                      {status === 'error' && (\n                        <AlertCircle className=\"h-4 w-4 text-red-500\" />\n                      )}\n                      \n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => removeFile(fileItem.id)}\n                        disabled={uploading}\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Kontroll-knappar */}\n      <div className=\"flex justify-between\">\n        <Button variant=\"outline\" onClick={onCancel} disabled={uploading}>\n          Avbryt\n        </Button>\n        \n        <div className=\"flex gap-2\">\n          {files.length > 0 && (\n            <Button \n              variant=\"outline\" \n              onClick={() => setFiles([])}\n              disabled={uploading}\n            >\n              Rensa alla\n            </Button>\n          )}\n          \n          <Button\n            onClick={processFiles}\n            disabled={!hasValidFiles || uploading}\n            className=\"min-w-[120px]\"\n          >\n            {uploading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                Bearbetar...\n              </>\n            ) : (\n              <>\n                <BarChart3 className=\"mr-2 h-4 w-4\" />\n                Analysera data ({validFilesCount})\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeseriesUploader;","import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableRow = React.forwardRef(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell\n}","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-white text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1 max-h-[300px] overflow-y-auto\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\nimport { Alert, AlertDescription, AlertTitle } from './ui/alert';\nimport { \n  ArrowUpDown, \n  ArrowUp, \n  ArrowDown,\n  BarChart3,\n  TrendingUp,\n  TrendingDown,\n  Calendar,\n  FileDown,\n  FileSpreadsheet,\n  AlertCircle,\n  ChevronLeft,\n  ChevronRight,\n  Activity,\n  Target\n} from 'lucide-react';\n\n// Sveriges Radio kanal-färger (från original)\nconst CHANNEL_COLORS = {\n  'P1': '#0066cc', // Blå\n  'P2': '#ff6600', // Orange\n  'P3': '#00cc66', // Grön\n  'P4': '#cc33cc', // Magenta/Lila\n  'EKOT': '#005eb8', // Mörk blå (Ekot/Radio Sweden)\n  'RADIOSPORTEN': '#1c5c35', // Mörk grön (Radiosporten)\n  'SR': '#000000',  // Svart för Sveriges Radio\n  'default': '#000000' // Svart som fallback\n};\n\n// ProfileIcon-komponent för Sveriges Radio kanaler (KORRIGERAD)\nconst ProfileIcon = ({ pageName }) => {\n  // Extrahera namn från sidnamnet\n  const name = pageName || 'Okänd';\n  \n  // Bestäm färg och kanal-text baserat på kanalnamn i sidnamnet\n  let backgroundColor = CHANNEL_COLORS.default;\n  let channelText = '';\n  \n  // Kontrollera om sidnamnet innehåller något av kanalnamnen\n  const nameLower = name.toLowerCase();\n  \n  if (nameLower.includes('ekot') || nameLower.includes('radio sweden')) {\n    backgroundColor = CHANNEL_COLORS.EKOT;\n    channelText = 'E';\n  } else if (nameLower.includes('radiosporten') || nameLower.includes('radio sporten')) {\n    backgroundColor = CHANNEL_COLORS.RADIOSPORTEN;\n    channelText = 'RS';\n  } else if (nameLower.includes('p1')) {\n    backgroundColor = CHANNEL_COLORS.P1;\n    channelText = 'P1';\n  } else if (nameLower.includes('p2')) {\n    backgroundColor = CHANNEL_COLORS.P2;\n    channelText = 'P2';\n  } else if (nameLower.includes('p3')) {\n    backgroundColor = CHANNEL_COLORS.P3;\n    channelText = 'P3';\n  } else if (nameLower.includes('p4')) {\n    backgroundColor = CHANNEL_COLORS.P4;\n    channelText = 'P4';\n  } else if (nameLower.includes('sveriges radio') && !nameLower.includes('p1') && \n            !nameLower.includes('p2') && !nameLower.includes('p3') && !nameLower.includes('p4')) {\n    // Sveriges Radio, men inte specifik kanal\n    backgroundColor = CHANNEL_COLORS.SR;\n    channelText = 'SR';\n  } else {\n    // Fallback: använd första bokstaven om ingen kanal hittas\n    channelText = name.charAt(0).toUpperCase();\n  }\n  \n  // Bestäm textfärg baserat på bakgrundsfärgen (vit text på mörka bakgrunder)\n  const isLightBackground = backgroundColor === CHANNEL_COLORS.P2 || backgroundColor === CHANNEL_COLORS.P3;\n  const textColor = isLightBackground ? 'text-black' : 'text-white';\n  \n  return (\n    <div \n      className={`flex-shrink-0 w-6 h-6 rounded-sm flex items-center justify-center text-xs font-bold ${textColor}`}\n      style={{ backgroundColor }}\n      title={pageName}\n    >\n      {channelText}\n    </div>\n  );\n};\n\n// Sidstorlekar för paginering\nconst PAGE_SIZE_OPTIONS = [\n  { value: 6, label: '6 per sida' },\n  { value: 12, label: '12 per sida' },\n  { value: 24, label: '24 per sida' }\n];\n\n// KORRIGERAT: Tillgängliga metrics (utan Engaged Users + rätt svenska namn)\nconst AVAILABLE_METRICS = [\n  { key: 'reach', label: 'Räckvidd', canSum: false },\n  { key: 'engagements', label: 'Engagemang', canSum: true },\n  { key: 'reactions', label: 'Reaktioner', canSum: true },\n  { key: 'publications', label: 'Publiceringar', canSum: true },\n  { key: 'status', label: 'Status', canSum: true },\n  { key: 'comment', label: 'Kommentarer', canSum: true }\n];\n\n// Metric-definitioner (korrigerade)\nconst METRIC_DEFINITIONS = {\n  reach: { displayName: 'Räckvidd', canSumAcrossPages: false, category: 'unique_persons' },\n  engagements: { displayName: 'Engagemang', canSumAcrossPages: true, category: 'countable' },\n  reactions: { displayName: 'Reaktioner', canSumAcrossPages: true, category: 'countable' },\n  publications: { displayName: 'Publiceringar', canSumAcrossPages: true, category: 'countable' },\n  status: { displayName: 'Status', canSumAcrossPages: true, category: 'countable' },\n  comment: { displayName: 'Kommentarer', canSumAcrossPages: true, category: 'countable' }\n};\n\nfunction PageTimeseriesView({ uploadedPeriods = [] }) {\n  // State management\n  const [availablePages, setAvailablePages] = useState([]);\n  const [selectedPageId, setSelectedPageId] = useState('');\n  const [pageTimeseriesData, setPageTimeseriesData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Analys-state\n  const [pageStats, setPageStats] = useState(null);\n  const [trendAnalysis, setTrendAnalysis] = useState({});\n  \n  // Tabell-state\n  const [sortConfig, setSortConfig] = useState({ key: 'year_month', direction: 'desc' });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(12);\n  const [selectedMetrics, setSelectedMetrics] = useState(['reach', 'engagements', 'publications']);\n\n  // Ladda tillgängliga sidor vid montering\n  useEffect(() => {\n    const loadPages = () => {\n      try {\n        setLoading(true);\n        \n        if (uploadedPeriods.length === 0) {\n          setAvailablePages([]);\n          setLoading(false);\n          return;\n        }\n        \n        // Samla alla unika sidor från alla perioder\n        const pagesMap = new Map();\n        \n        uploadedPeriods.forEach(period => {\n          if (period.data && Array.isArray(period.data)) {\n            period.data.forEach(csvRow => {\n              const pageName = csvRow.Page || csvRow.page || 'Okänd sida';\n              const pageId = csvRow['Page ID'] || csvRow.pageId || `page_${pageName.replace(/\\s+/g, '_')}`;\n              \n              if (!pagesMap.has(pageId)) {\n                pagesMap.set(pageId, {\n                  pageId,\n                  pageName\n                });\n              }\n            });\n          }\n        });\n        \n        const pages = Array.from(pagesMap.values()).sort((a, b) => \n          a.pageName.localeCompare(b.pageName)\n        );\n        \n        setAvailablePages(pages);\n        \n        // Sätt första sidan som default\n        if (pages.length > 0) {\n          setSelectedPageId(pages[0].pageId);\n        }\n        \n      } catch (err) {\n        console.error('Error loading pages:', err);\n        setError('Kunde inte ladda tillgängliga Facebook-sidor');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadPages();\n  }, [uploadedPeriods]);\n\n  // Ladda data när vald sida ändras\n  useEffect(() => {\n    if (!selectedPageId || uploadedPeriods.length === 0) return;\n    \n    const loadPageData = () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        // Samla all data för vald sida från alla perioder\n        const pageData = [];\n        \n        uploadedPeriods.forEach(period => {\n          if (period.data && Array.isArray(period.data)) {\n            const pageRow = period.data.find(csvRow => {\n              const pageId = csvRow['Page ID'] || csvRow.pageId || `page_${(csvRow.Page || csvRow.page || '').replace(/\\s+/g, '_')}`;\n              return pageId === selectedPageId;\n            });\n            \n            if (pageRow) {\n              pageData.push({\n                year: period.year,\n                month: period.month,\n                pageName: pageRow.Page || pageRow.page || 'Okänd sida',\n                pageId: selectedPageId,\n                metrics: {\n                  reach: parseNumericValue(pageRow.Reach || pageRow.reach),\n                  engagements: parseNumericValue(pageRow.Engagements || pageRow.engagements),\n                  reactions: parseNumericValue(pageRow.Reactions || pageRow.reactions),\n                  publications: parseNumericValue(pageRow.Publications || pageRow.publications),\n                  status: parseNumericValue(pageRow.Status || pageRow.status),\n                  comment: parseNumericValue(pageRow.Comment || pageRow.comment)\n                }\n              });\n            }\n          }\n        });\n        \n        if (pageData.length === 0) {\n          const selectedPage = availablePages.find(p => p.pageId === selectedPageId);\n          setError(`Ingen tidserie-data hittades för ${selectedPage?.pageName || 'vald sida'}`);\n          return;\n        }\n        \n        // Sortera data kronologiskt (senaste först som default)\n        const sortedData = pageData.sort((a, b) => {\n          if (a.year !== b.year) return b.year - a.year;\n          return b.month - a.month;\n        });\n        \n        setPageTimeseriesData(sortedData);\n        \n        // Beräkna statistik för sidan\n        calculatePageStatistics(sortedData);\n        \n      } catch (err) {\n        console.error('Error loading page timeseries:', err);\n        const selectedPage = availablePages.find(p => p.pageId === selectedPageId);\n        setError(`Kunde inte ladda data för ${selectedPage?.pageName || 'vald sida'}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadPageData();\n  }, [selectedPageId, uploadedPeriods, availablePages]);\n\n  // Parse numeriskt värde säkert\n  const parseNumericValue = (value) => {\n    if (value === null || value === undefined || value === '') return 0;\n    const parsed = parseFloat(String(value).replace(/[,\\s]/g, ''));\n    return isNaN(parsed) ? 0 : parsed;\n  };\n\n// DEL_1_SLUTAR_HÄR - Fortsätt med del 2 som börjar med calculatePageStatistics\n// DEL_2_BÖRJAR_HÄR - Fortsättning från del 1 med calculatePageStatistics\n\n  // Beräkna statistik för sidan (KORRIGERAT)\n  const calculatePageStatistics = (data) => {\n    if (data.length === 0) return;\n    \n    const selectedPage = availablePages.find(p => p.pageId === selectedPageId);\n    \n    const stats = {\n      pageName: selectedPage?.pageName || data[0]?.pageName || 'Okänd sida',\n      totalPeriods: data.length,\n      firstPeriod: data[data.length - 1], // Äldsta (slutet av sorterad array)\n      lastPeriod: data[0], // Senaste (början av sorterad array)\n      metrics: {}\n    };\n    \n    // KORRIGERAT: Beräkna statistik för varje metric (utan status & comment)\n    const availableMetricKeys = ['reach', 'engagements', 'reactions', 'publications'];\n    for (const metric of availableMetricKeys) {\n      const values = data.map(d => d.metrics[metric]).filter(v => v !== null && v !== undefined && !isNaN(v));\n      \n      if (values.length > 0) {\n        const avg = values.reduce((sum, val) => sum + val, 0) / values.length;\n        const min = Math.min(...values);\n        const max = Math.max(...values);\n        \n        // Hitta bästa och sämsta månader\n        const bestMonth = data.find(d => d.metrics[metric] === max);\n        const worstMonth = data.find(d => d.metrics[metric] === min);\n        \n        stats.metrics[metric] = {\n          average: Math.round(avg),\n          min,\n          max,\n          bestMonth: bestMonth ? { year: bestMonth.year, month: bestMonth.month, value: max } : null,\n          worstMonth: worstMonth ? { year: worstMonth.year, month: worstMonth.month, value: min } : null\n        };\n      }\n    }\n    \n    setPageStats(stats);\n    \n    // Beräkna trend-analys för valda metrics\n    const trends = {};\n    for (const metric of selectedMetrics) {\n      if (data.length >= 2) {\n        // Förenklad trend-beräkning (första vs senaste)\n        const oldestValue = data[data.length - 1]?.metrics[metric] || 0;\n        const latestValue = data[0]?.metrics[metric] || 0;\n        \n        const change = latestValue - oldestValue;\n        const percentChange = oldestValue > 0 ? ((change / oldestValue) * 100) : 0;\n        \n        trends[metric] = {\n          change,\n          percentChange: Math.round(percentChange * 10) / 10,\n          trend: change > 0 ? 'up' : change < 0 ? 'down' : 'stable'\n        };\n      }\n    }\n    \n    setTrendAnalysis(trends);\n  };\n\n  // Hjälpfunktion för månadsnamn\n  const getMonthName = (month) => {\n    const months = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun',\n      'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'\n    ];\n    return months[month - 1];\n  };\n\n  // Sortera data\n  const sortedData = useMemo(() => {\n    if (!pageTimeseriesData.length) return [];\n    \n    return [...pageTimeseriesData].sort((a, b) => {\n      let aValue, bValue;\n      \n      if (sortConfig.key === 'year_month') {\n        aValue = a.year * 100 + a.month;\n        bValue = b.year * 100 + b.month;\n      } else {\n        aValue = a.metrics[sortConfig.key] || 0;\n        bValue = b.metrics[sortConfig.key] || 0;\n      }\n      \n      const comparison = aValue - bValue;\n      return sortConfig.direction === 'asc' ? comparison : -comparison;\n    });\n  }, [pageTimeseriesData, sortConfig]);\n\n  // Paginering\n  const paginatedData = useMemo(() => {\n    const startIndex = (currentPage - 1) * pageSize;\n    return sortedData.slice(startIndex, startIndex + pageSize);\n  }, [sortedData, currentPage, pageSize]);\n\n  const totalPages = Math.ceil(sortedData.length / pageSize);\n\n  // Hantera sortering\n  const handleSort = (key) => {\n    setSortConfig(current => ({\n      key,\n      direction: current.key === key && current.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  // Få sorterings-ikon\n  const getSortIcon = (columnKey) => {\n    if (sortConfig.key !== columnKey) {\n      return <ArrowUpDown className=\"h-4 w-4 ml-1 opacity-50\" />;\n    }\n    return sortConfig.direction === 'asc' ? \n      <ArrowUp className=\"h-4 w-4 ml-1\" /> : \n      <ArrowDown className=\"h-4 w-4 ml-1\" />;\n  };\n\n  // KORRIGERAT: Hantera metric-val med checkboxar\n  const handleMetricToggle = (metricKey) => {\n    setSelectedMetrics(current => \n      current.includes(metricKey) \n        ? current.filter(m => m !== metricKey)\n        : [...current, metricKey]\n    );\n  };\n\n  // Export till CSV\n  const handleExportCSV = () => {\n    const selectedPage = availablePages.find(p => p.pageId === selectedPageId);\n    const headers = ['År', 'Månad', 'Period', ...selectedMetrics.map(m => {\n      const def = METRIC_DEFINITIONS[m];\n      return def ? def.displayName : m;\n    })];\n    \n    const csvData = sortedData.map(item => [\n      item.year,\n      item.month,\n      `${getMonthName(item.month)} ${item.year}`,\n      ...selectedMetrics.map(m => item.metrics[m] || 0)\n    ]);\n    \n    const csvContent = [\n      headers.join(','),\n      ...csvData.map(row => row.join(','))\n    ].join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${selectedPage?.pageName.replace(/[^a-zA-Z0-9]/g, '_')}_tidsserie.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Formatera numeriska värden\n  const formatValue = (value) => {\n    if (value === null || value === undefined || isNaN(value)) return '-';\n    return new Intl.NumberFormat('sv-SE').format(value);\n  };\n\n  // Hitta bästa och sämsta värden för prestanda-highlighting\n  const getPerformanceClass = (metric, value, data) => {\n    if (!data || data.length < 2 || value === null || value === undefined) return '';\n    \n    const values = data.map(d => d.metrics[metric]).filter(v => v !== null && v !== undefined && !isNaN(v));\n    if (values.length < 2) return '';\n    \n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    \n    if (value === max && max !== min) return 'bg-green-100 text-green-800 font-medium';\n    if (value === min && max !== min) return 'bg-red-100 text-red-800 font-medium';\n    return '';\n  };\n\n  if (loading) {\n    return (\n      <Alert>\n        <Activity className=\"h-4 w-4\" />\n        <AlertTitle>Laddar data</AlertTitle>\n        <AlertDescription>\n          Analyserar tidserie-data för Facebook-sidor...\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Fel</AlertTitle>\n        <AlertDescription>\n          {error}\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (availablePages.length === 0) {\n    return (\n      <Alert>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Inga sidor hittades</AlertTitle>\n        <AlertDescription>\n          Kunde inte hitta några Facebook-sidor i den uppladdade datan.\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  const selectedPage = availablePages.find(p => p.pageId === selectedPageId);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Sida-väljare och kontroller */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <BarChart3 className=\"h-5 w-5 text-facebook-500\" />\n            Sidanalys över tid\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid md:grid-cols-2 gap-4 mb-6\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Välj Facebook-sida</label>\n              <Select \n                value={selectedPageId}\n                onValueChange={setSelectedPageId}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Välj sida att analysera\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {availablePages.map(page => (\n                    <SelectItem key={page.pageId} value={page.pageId}>\n                      <div className=\"flex items-center gap-2\">\n                        <ProfileIcon pageName={page.pageName} />\n                        <span>{page.pageName}</span>\n                      </div>\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {selectedPage && (\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  ID: {selectedPage.pageId}\n                </p>\n              )}\n            </div>\n            \n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Metrics att visa</label>\n              {/* KORRIGERAT: Checkboxar istället för knappar */}\n              <div className=\"flex flex-wrap gap-3\">\n                {AVAILABLE_METRICS.map(metric => {\n                  const isSelected = selectedMetrics.includes(metric.key);\n                  \n                  return (\n                    <label key={metric.key} className=\"flex items-center gap-2 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={isSelected}\n                        onChange={() => handleMetricToggle(metric.key)}\n                        className=\"h-4 w-4 text-facebook-500 border-gray-300 rounded focus:ring-facebook-500\"\n                      />\n                      <span className=\"text-sm font-medium\">{metric.label}</span>\n                      {!metric.canSum && (\n                        <span className=\"text-xs text-orange-600 font-medium\">*</span>\n                      )}\n                    </label>\n                  );\n                })}\n              </div>\n              <p className=\"text-xs text-muted-foreground mt-2\">\n                * = Kan inte summeras över månader (unika personer)\n              </p>\n            </div>\n          </div>\n\n          {/* Statistik-sammanfattning */}\n          {pageStats && (\n            <div className=\"grid md:grid-cols-4 gap-4 mb-6 p-4 bg-muted/30 rounded-lg\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-facebook-600 flex items-center justify-center gap-2\">\n                  <ProfileIcon pageName={pageStats.pageName} />\n                  {pageStats.totalPeriods}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Månader data</div>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold\">\n                  {getMonthName(pageStats.firstPeriod.month)} {pageStats.firstPeriod.year}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Första månad</div>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold\">\n                  {getMonthName(pageStats.lastPeriod.month)} {pageStats.lastPeriod.year}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Senaste månad</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold text-facebook-600\">\n                  {selectedPage?.pageName || 'Okänd sida'}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Vald sida</div>\n              </div>\n            </div>\n          )}\n\n          {/* Trend-indikatorer för valda metrics */}\n          {Object.keys(trendAnalysis).length > 0 && (\n            <div className=\"grid md:grid-cols-3 gap-4 mb-6\">\n              {selectedMetrics.slice(0, 3).map(metric => {\n                const trend = trendAnalysis[metric];\n                const definition = METRIC_DEFINITIONS[metric];\n                \n                if (!trend || !definition) return null;\n                \n                return (\n                  <div key={metric} className=\"flex items-center gap-3 p-3 bg-white border rounded-lg\">\n                    {trend.trend === 'up' && <TrendingUp className=\"h-5 w-5 text-green-600\" />}\n                    {trend.trend === 'down' && <TrendingDown className=\"h-5 w-5 text-red-600\" />}\n                    {trend.trend === 'stable' && <Activity className=\"h-5 w-5 text-gray-500\" />}\n                    \n                    <div className=\"flex-1\">\n                      <div className=\"font-medium text-sm\">{definition.displayName}</div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        {trend.percentChange > 0 ? '+' : ''}{trend.percentChange}% sedan första månad\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Tidserie-tabell */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Calendar className=\"h-5 w-5\" />\n            Månadsvis utveckling - {selectedPage?.pageName || 'Okänd sida'}\n          </CardTitle>\n          <div className=\"flex gap-2\">\n            <Button onClick={handleExportCSV} variant=\"outline\" size=\"sm\">\n              <FileDown className=\"h-4 w-4 mr-2\" />\n              CSV\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {pageTimeseriesData.length === 0 ? (\n            <p className=\"text-center text-muted-foreground py-8\">\n              Ingen tidserie-data tillgänglig för vald sida\n            </p>\n          ) : (\n            <>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead \n                      className=\"cursor-pointer select-none\"\n                      onClick={() => handleSort('year_month')}\n                    >\n                      <div className=\"flex items-center\">\n                        Period\n                        {getSortIcon('year_month')}\n                      </div>\n                    </TableHead>\n                    {selectedMetrics.map(metric => {\n                      const definition = METRIC_DEFINITIONS[metric];\n                      return (\n                        <TableHead \n                          key={metric}\n                          className=\"text-right cursor-pointer select-none\"\n                          onClick={() => handleSort(metric)}\n                        >\n                          <div className=\"flex items-center justify-end\">\n                            {definition?.displayName || metric}\n                            {getSortIcon(metric)}\n                            {!definition?.canSumAcrossPages && (\n                              <span className=\"ml-1 text-orange-600\">*</span>\n                            )}\n                          </div>\n                        </TableHead>\n                      );\n                    })}\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {paginatedData.map((item, index) => (\n                    <TableRow key={`${item.year}_${item.month}`}>\n                      <TableCell className=\"font-medium\">\n                        {getMonthName(item.month)} {item.year}\n                      </TableCell>\n                      {selectedMetrics.map(metric => (\n                        <TableCell \n                          key={metric}\n                          className=\"text-right\"\n                        >\n                          <div className=\"flex items-center justify-end gap-1\">\n                            {formatValue(item.metrics[metric])}\n                            {pageStats?.metrics[metric]?.bestMonth && \n                             pageStats.metrics[metric].bestMonth.year === item.year &&\n                             pageStats.metrics[metric].bestMonth.month === item.month && (\n                              <span className=\"text-yellow-600\" title=\"Bästa värde för denna sida\">🏆</span>\n                            )}\n                            {pageStats?.metrics[metric]?.worstMonth && \n                             pageStats.metrics[metric].worstMonth.year === item.year &&\n                             pageStats.metrics[metric].worstMonth.month === item.month && (\n                              <span className=\"text-gray-500\" title=\"Sämsta värde för denna sida\">📉</span>\n                            )}\n                          </div>\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n\n              {/* Paginering */}\n              <div className=\"flex items-center justify-between mt-4\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm text-muted-foreground\">Visa:</span>\n                  <Select\n                    value={pageSize.toString()}\n                    onValueChange={(value) => {\n                      setPageSize(Number(value));\n                      setCurrentPage(1);\n                    }}\n                  >\n                    <SelectTrigger className=\"w-[120px]\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {PAGE_SIZE_OPTIONS.map(option => (\n                        <SelectItem key={option.value} value={option.value.toString()}>\n                          {option.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div className=\"flex items-center gap-6\">\n                  <span className=\"text-sm text-muted-foreground\">\n                    Visar {((currentPage - 1) * pageSize) + 1} till {Math.min(currentPage * pageSize, sortedData.length)} av {sortedData.length}\n                  </span>\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                      disabled={currentPage === 1}\n                    >\n                      <ChevronLeft className=\"h-4 w-4\" />\n                    </Button>\n                    \n                    <span className=\"text-sm\">\n                      Sida {currentPage} av {totalPages}\n                    </span>\n                    \n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n                      disabled={currentPage >= totalPages}\n                    >\n                      <ChevronRight className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n          \n          {/* Förklaring av ikoner */}\n          <div className=\"mt-4 p-3 bg-muted/30 rounded-lg\">\n            <div className=\"text-sm space-y-1\">\n              <div className=\"flex items-center gap-2\">\n                <span>🏆 = Bästa värde för denna sida</span>\n                <span className=\"mx-4\">📉 = Sämsta värde för denna sida</span>\n              </div>\n              <div className=\"text-muted-foreground text-xs\">\n                Gröna värden = bästa prestanda, röda värden = sämsta prestanda för vald tidsperiod\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default PageTimeseriesView;","import React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './ui/card';\nimport { Button } from './ui/button';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\nimport { Alert, AlertDescription, AlertTitle } from './ui/alert';\nimport { \n  ArrowUpDown, \n  ArrowUp, \n  ArrowDown,\n  Calendar,\n  BarChart3,\n  FileDown,\n  FileSpreadsheet,\n  AlertCircle,\n  ChevronLeft,\n  ChevronRight,\n  Target,\n  Activity\n} from 'lucide-react';\n\n// Sveriges Radio kanal-färger (från original)\nconst CHANNEL_COLORS = {\n  'P1': '#0066cc', // Blå\n  'P2': '#ff6600', // Orange\n  'P3': '#00cc66', // Grön\n  'P4': '#cc33cc', // Magenta/Lila\n  'EKOT': '#005eb8', // Mörk blå (Ekot/Radio Sweden)\n  'RADIOSPORTEN': '#1c5c35', // Mörk grön (Radiosporten)\n  'SR': '#000000',  // Svart för Sveriges Radio\n  'default': '#000000' // Svart som fallback\n};\n\n// ProfileIcon-komponent för Sveriges Radio kanaler (KORRIGERAD)\nconst ProfileIcon = ({ pageName }) => {\n  // Extrahera namn från sidnamnet\n  const name = pageName || 'Okänd';\n  \n  // Bestäm färg och kanal-text baserat på kanalnamn i sidnamnet\n  let backgroundColor = CHANNEL_COLORS.default;\n  let channelText = '';\n  \n  // Kontrollera om sidnamnet innehåller något av kanalnamnen\n  const nameLower = name.toLowerCase();\n  \n  if (nameLower.includes('ekot') || nameLower.includes('radio sweden')) {\n    backgroundColor = CHANNEL_COLORS.EKOT;\n    channelText = 'E';\n  } else if (nameLower.includes('radiosporten') || nameLower.includes('radio sporten')) {\n    backgroundColor = CHANNEL_COLORS.RADIOSPORTEN;\n    channelText = 'RS';\n  } else if (nameLower.includes('p1')) {\n    backgroundColor = CHANNEL_COLORS.P1;\n    channelText = 'P1';\n  } else if (nameLower.includes('p2')) {\n    backgroundColor = CHANNEL_COLORS.P2;\n    channelText = 'P2';\n  } else if (nameLower.includes('p3')) {\n    backgroundColor = CHANNEL_COLORS.P3;\n    channelText = 'P3';\n  } else if (nameLower.includes('p4')) {\n    backgroundColor = CHANNEL_COLORS.P4;\n    channelText = 'P4';\n  } else if (nameLower.includes('sveriges radio') && !nameLower.includes('p1') && \n            !nameLower.includes('p2') && !nameLower.includes('p3') && !nameLower.includes('p4')) {\n    // Sveriges Radio, men inte specifik kanal\n    backgroundColor = CHANNEL_COLORS.SR;\n    channelText = 'SR';\n  } else {\n    // Fallback: använd första bokstaven om ingen kanal hittas\n    channelText = name.charAt(0).toUpperCase();\n  }\n  \n  // Bestäm textfärg baserat på bakgrundsfärgen (vit text på mörka bakgrunder)\n  const isLightBackground = backgroundColor === CHANNEL_COLORS.P2 || backgroundColor === CHANNEL_COLORS.P3;\n  const textColor = isLightBackground ? 'text-black' : 'text-white';\n  \n  return (\n    <div \n      className={`flex-shrink-0 w-6 h-6 rounded-sm flex items-center justify-center text-xs font-bold ${textColor}`}\n      style={{ backgroundColor }}\n      title={pageName}\n    >\n      {channelText}\n    </div>\n  );\n};\n\n// Sidstorlekar för paginering\nconst PAGE_SIZE_OPTIONS = [\n  { value: 10, label: '10 per sida' },\n  { value: 25, label: '25 per sida' },\n  { value: 50, label: '50 per sida' }\n];\n\n// KORRIGERAT: Tillgängliga metrics för månadsvy\nconst AVAILABLE_METRICS = [\n  { key: 'reach', label: 'Räckvidd', canSum: false },\n  { key: 'engagements', label: 'Engagemang', canSum: true },\n  { key: 'reactions', label: 'Reaktioner', canSum: true },\n  { key: 'publications', label: 'Publiceringar', canSum: true }\n];\n\n// Metric-definitioner (korrigerade)\nconst METRIC_DEFINITIONS = {\n  reach: { displayName: 'Räckvidd', canSumAcrossPages: false, category: 'unique_persons' },\n  engagements: { displayName: 'Engagemang', canSumAcrossPages: true, category: 'countable' },\n  reactions: { displayName: 'Reaktioner', canSumAcrossPages: true, category: 'countable' },\n  publications: { displayName: 'Publiceringar', canSumAcrossPages: true, category: 'countable' }\n};\n\nfunction MonthlyComparisonView({ uploadedPeriods = [] }) {\n  // State management\n  const [selectedPeriod, setSelectedPeriod] = useState(null);\n  const [periodData, setPeriodData] = useState([]);\n  const [periodSummary, setPeriodSummary] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  // Tabell-state\n  const [sortConfig, setSortConfig] = useState({ key: 'pageName', direction: 'asc' });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(25);\n  const [selectedMetrics, setSelectedMetrics] = useState(['reach', 'engagements', 'publications']);\n\n  // Sätt default period när uploadedPeriods ändras\n  useEffect(() => {\n    if (uploadedPeriods.length > 0 && !selectedPeriod) {\n      const firstPeriod = uploadedPeriods[0];\n      setSelectedPeriod({ year: firstPeriod.year, month: firstPeriod.month });\n    }\n  }, [uploadedPeriods, selectedPeriod]);\n\n  // Ladda data när vald period ändras\n  useEffect(() => {\n    if (!selectedPeriod) return;\n    \n    const loadPeriodData = () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const matchingPeriod = uploadedPeriods.find(period => \n          period.year === selectedPeriod.year && period.month === selectedPeriod.month\n        );\n        \n        if (!matchingPeriod) {\n          setError(`Ingen data hittades för ${getMonthName(selectedPeriod.month)} ${selectedPeriod.year}`);\n          setPeriodData([]);\n          setPeriodSummary(null);\n          return;\n        }\n        \n        // KORRIGERAT: Mappa endast de 4 relevanta kolumnerna från CSV\n        const convertedData = matchingPeriod.data.map(csvRow => ({\n          page: {\n            pageName: csvRow.Page || csvRow.page || 'Okänd sida',\n            pageId: csvRow['Page ID'] || csvRow.pageId || 'unknown'\n          },\n          period: {\n            year: selectedPeriod.year,\n            month: selectedPeriod.month\n          },\n          metrics: {\n            reach: parseNumericValue(csvRow.Reach || csvRow.reach),\n            engagements: parseNumericValue(csvRow.Engagements || csvRow.engagements),\n            reactions: parseNumericValue(csvRow.Reactions || csvRow.reactions),\n            publications: parseNumericValue(csvRow.Publications || csvRow.publications)\n          }\n        }));\n        \n        setPeriodData(convertedData);\n        \n        const summary = calculatePeriodSummary(convertedData, selectedPeriod.year, selectedPeriod.month);\n        setPeriodSummary(summary);\n        \n      } catch (err) {\n        console.error('Error loading period data:', err);\n        setError(`Kunde inte ladda data för ${getMonthName(selectedPeriod.month)} ${selectedPeriod.year}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadPeriodData();\n  }, [selectedPeriod, uploadedPeriods]);\n\n  // Parse numeriskt värde säkert\n  const parseNumericValue = (value) => {\n    if (value === null || value === undefined || value === '') return 0;\n    const parsed = parseFloat(String(value).replace(/[,\\s]/g, ''));\n    return isNaN(parsed) ? 0 : parsed;\n  };\n\n  // Hjälpfunktion för månadsnamn\n  const getMonthName = (month) => {\n    const months = [\n      'Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni',\n      'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'\n    ];\n    return months[month - 1];\n  };\n\n  // Beräkna period-sammandrag (KORRIGERAT)\n  const calculatePeriodSummary = (data, year, month) => {\n    if (!data.length) return null;\n    \n    const summary = {\n      period: { year, month },\n      totalPages: data.length,\n      metrics: {}\n    };\n\n    // KORRIGERAT: Använd bara de 4 relevanta metrics\n    const availableMetricKeys = ['reach', 'engagements', 'reactions', 'publications'];\n    \n    for (const metric of availableMetricKeys) {\n      const values = data\n        .map(item => item.metrics[metric])\n        .filter(value => value !== null && value !== undefined && !isNaN(value) && value >= 0);\n\n      if (values.length === 0) {\n        summary.metrics[metric] = {\n          total: 0,\n          average: 0,\n          min: 0,\n          max: 0,\n          validPages: 0,\n          type: METRIC_DEFINITIONS[metric].category\n        };\n        continue;\n      }\n\n      const definition = METRIC_DEFINITIONS[metric];\n      \n      if (!definition.canSumAcrossPages) {\n        summary.metrics[metric] = {\n          average: Math.round(values.reduce((sum, val) => sum + val, 0) / values.length),\n          min: Math.min(...values),\n          max: Math.max(...values),\n          validPages: values.length,\n          type: 'unique_persons',\n          note: 'Genomsnitt över sidor - total reach kan inte beräknas'\n        };\n      } else {\n        const total = values.reduce((sum, val) => sum + val, 0);\n        summary.metrics[metric] = {\n          total,\n          average: Math.round(total / values.length),\n          min: Math.min(...values),\n          max: Math.max(...values),\n          validPages: values.length,\n          type: 'countable'\n        };\n      }\n    }\n\n    return summary;\n  };\n\n  // Sortera data\n  const sortedData = useMemo(() => {\n    if (!periodData.length) return [];\n    \n    return [...periodData].sort((a, b) => {\n      let aValue, bValue;\n      \n      if (sortConfig.key === 'pageName') {\n        aValue = a.page.pageName;\n        bValue = b.page.pageName;\n      } else {\n        aValue = a.metrics[sortConfig.key] || 0;\n        bValue = b.metrics[sortConfig.key] || 0;\n      }\n      \n      if (typeof aValue === 'string') {\n        const comparison = aValue.localeCompare(bValue);\n        return sortConfig.direction === 'asc' ? comparison : -comparison;\n      }\n      \n      const comparison = aValue - bValue;\n      return sortConfig.direction === 'asc' ? comparison : -comparison;\n    });\n  }, [periodData, sortConfig]);\n\n  // Paginering\n  const paginatedData = useMemo(() => {\n    const startIndex = (currentPage - 1) * pageSize;\n    return sortedData.slice(startIndex, startIndex + pageSize);\n  }, [sortedData, currentPage, pageSize]);\n\n  const totalPages = Math.ceil(sortedData.length / pageSize);\n\n  // Hantera sortering\n  const handleSort = (key) => {\n    setSortConfig(current => ({\n      key,\n      direction: current.key === key && current.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  // Få sorterings-ikon\n  const getSortIcon = (columnKey) => {\n    if (sortConfig.key !== columnKey) {\n      return <ArrowUpDown className=\"h-4 w-4 ml-1 opacity-50\" />;\n    }\n    return sortConfig.direction === 'asc' ? \n      <ArrowUp className=\"h-4 w-4 ml-1\" /> : \n      <ArrowDown className=\"h-4 w-4 ml-1\" />;\n  };\n\n  // KORRIGERAT: Hantera metric-val med checkboxar\n  const handleMetricToggle = (metricKey) => {\n    setSelectedMetrics(current => \n      current.includes(metricKey) \n        ? current.filter(m => m !== metricKey)\n        : [...current, metricKey]\n    );\n  };\n\n// DEL_1_SLUTAR_HÄR - Fortsätt med del 2 som börjar med handleExportCSV\n// DEL_2_BÖRJAR_HÄR - Fortsättning från del 1 med handleExportCSV\n\n  // Export till CSV\n  const handleExportCSV = () => {\n    const headers = ['Sidnamn', 'Sido-ID', ...selectedMetrics.map(m => {\n      const def = METRIC_DEFINITIONS[m];\n      return def ? def.displayName : m;\n    })];\n    \n    const csvData = sortedData.map(item => [\n      item.page.pageName,\n      item.page.pageId,\n      ...selectedMetrics.map(m => item.metrics[m] || 0)\n    ]);\n    \n    const csvContent = [\n      headers.join(','),\n      ...csvData.map(row => row.join(','))\n    ].join('\\n');\n    \n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    \n    const periodName = selectedPeriod ? \n      `${getMonthName(selectedPeriod.month)}_${selectedPeriod.year}` : \n      'månadsjämförelse';\n      \n    link.setAttribute('download', `Facebook_${periodName}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Formatera numeriska värden\n  const formatValue = (value) => {\n    if (value === null || value === undefined || isNaN(value)) return '-';\n    return new Intl.NumberFormat('sv-SE').format(value);\n  };\n\n  // Hitta bästa och sämsta värden för prestanda-highlighting\n  const getPerformanceClass = (metric, value, data) => {\n    if (!data || data.length < 2 || value === null || value === undefined) return '';\n    \n    const values = data.map(d => d.metrics[metric]).filter(v => v !== null && v !== undefined && !isNaN(v));\n    if (values.length < 2) return '';\n    \n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    \n    if (value === max && max !== min) return 'bg-green-100 text-green-800 font-medium';\n    if (value === min && max !== min) return 'bg-red-100 text-red-800 font-medium';\n    return '';\n  };\n\n  if (loading) {\n    return (\n      <Alert>\n        <Activity className=\"h-4 w-4\" />\n        <AlertTitle>Laddar data</AlertTitle>\n        <AlertDescription>\n          Analyserar månadsdata för Facebook-sidor...\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"destructive\">\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Fel</AlertTitle>\n        <AlertDescription>\n          {error}\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (uploadedPeriods.length === 0) {\n    return (\n      <Alert>\n        <AlertCircle className=\"h-4 w-4\" />\n        <AlertTitle>Ingen data</AlertTitle>\n        <AlertDescription>\n          Ladda upp CSV-filer för att visa månadsvis jämförelse av Facebook-sidor.\n        </AlertDescription>\n      </Alert>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Period-väljare och kontroller */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Calendar className=\"h-5 w-5 text-facebook-500\" />\n            Månadsvis jämförelse\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid md:grid-cols-2 gap-4 mb-6\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Välj månad</label>\n              <Select \n                value={selectedPeriod ? `${selectedPeriod.year}_${selectedPeriod.month}` : ''}\n                onValueChange={(value) => {\n                  const [year, month] = value.split('_');\n                  setSelectedPeriod({ year: parseInt(year), month: parseInt(month) });\n                }}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Välj månad att analysera\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {uploadedPeriods.map(period => (\n                    <SelectItem key={`${period.year}_${period.month}`} value={`${period.year}_${period.month}`}>\n                      {getMonthName(period.month)} {period.year}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {selectedPeriod && (\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Visar data för {getMonthName(selectedPeriod.month)} {selectedPeriod.year}\n                </p>\n              )}\n            </div>\n            \n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Metrics att visa</label>\n              <div className=\"flex flex-wrap gap-3\">\n                {AVAILABLE_METRICS.map(metric => {\n                  const isSelected = selectedMetrics.includes(metric.key);\n                  \n                  return (\n                    <label key={metric.key} className=\"flex items-center gap-2 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={isSelected}\n                        onChange={() => handleMetricToggle(metric.key)}\n                        className=\"h-4 w-4 text-facebook-500 border-gray-300 rounded focus:ring-facebook-500\"\n                      />\n                      <span className=\"text-sm font-medium\">{metric.label}</span>\n                      {!metric.canSum && (\n                        <span className=\"text-xs text-orange-600 font-medium\">*</span>\n                      )}\n                    </label>\n                  );\n                })}\n              </div>\n              <p className=\"text-xs text-muted-foreground mt-2\">\n                * = Kan inte summeras över sidor (unika personer per månad)\n              </p>\n            </div>\n          </div>\n\n          {/* Period-sammandrag */}\n          {periodSummary && (\n            <div className=\"grid md:grid-cols-4 gap-4 mb-6 p-4 bg-muted/30 rounded-lg\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-facebook-600\">\n                  {periodSummary.totalPages}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Facebook-sidor</div>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"text-lg font-semibold\">\n                  {getMonthName(periodSummary.period.month)} {periodSummary.period.year}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Vald period</div>\n              </div>\n              \n              {selectedMetrics.slice(0, 2).map(metric => {\n                const metricData = periodSummary.metrics[metric];\n                const definition = METRIC_DEFINITIONS[metric];\n                \n                if (!metricData || !definition) return null;\n                \n                return (\n                  <div key={metric} className=\"text-center\">\n                    <div className=\"text-lg font-semibold\">\n                      {definition.canSumAcrossPages ? \n                        formatValue(metricData.total) : \n                        formatValue(metricData.average)\n                      }\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">\n                      {definition.canSumAcrossPages ? `Total ${definition.displayName}` : `Snitt ${definition.displayName}`}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Månadsdata-tabell */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <BarChart3 className=\"h-5 w-5\" />\n            {selectedPeriod ? \n              `${getMonthName(selectedPeriod.month)} ${selectedPeriod.year} - Alla sidor` : \n              'Månadsdata'}\n          </CardTitle>\n          <div className=\"flex gap-2\">\n            <Button onClick={handleExportCSV} variant=\"outline\" size=\"sm\">\n              <FileDown className=\"h-4 w-4 mr-2\" />\n              CSV\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {periodData.length === 0 ? (\n            <p className=\"text-center text-muted-foreground py-8\">\n              Ingen data tillgänglig för vald månad\n            </p>\n          ) : (\n            <>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead \n                      className=\"cursor-pointer select-none\"\n                      onClick={() => handleSort('pageName')}\n                    >\n                      <div className=\"flex items-center\">\n                        Sidnamn\n                        {getSortIcon('pageName')}\n                      </div>\n                    </TableHead>\n                    {selectedMetrics.map(metric => {\n                      const definition = METRIC_DEFINITIONS[metric];\n                      return (\n                        <TableHead \n                          key={metric}\n                          className=\"text-right cursor-pointer select-none\"\n                          onClick={() => handleSort(metric)}\n                        >\n                          <div className=\"flex items-center justify-end\">\n                            {definition?.displayName || metric}\n                            {getSortIcon(metric)}\n                            {!definition?.canSumAcrossPages && (\n                              <span className=\"ml-1 text-orange-600\">*</span>\n                            )}\n                          </div>\n                        </TableHead>\n                      );\n                    })}\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {paginatedData.map((item, index) => (\n                    <TableRow key={item.page.pageId}>\n                      <TableCell className=\"font-medium\">\n                        <div className=\"flex items-center gap-2\">\n                          <ProfileIcon pageName={item.page.pageName} />\n                          <span>{item.page.pageName}</span>\n                        </div>\n                      </TableCell>\n                      {selectedMetrics.map(metric => (\n                        <TableCell \n                          key={metric}\n                          className=\"text-right\"\n                        >\n                          <div className=\"flex items-center justify-end gap-1\">\n                            {formatValue(item.metrics[metric])}\n                            {periodSummary?.metrics[metric] && \n                             item.metrics[metric] === periodSummary.metrics[metric].max && \n                             periodSummary.metrics[metric].max !== periodSummary.metrics[metric].min && (\n                              <span className=\"text-yellow-600\" title=\"Bästa värde för denna månad\">🏆</span>\n                            )}\n                            {periodSummary?.metrics[metric] && \n                             item.metrics[metric] === periodSummary.metrics[metric].min && \n                             periodSummary.metrics[metric].max !== periodSummary.metrics[metric].min && (\n                              <span className=\"text-gray-500\" title=\"Lägsta värde för denna månad\">📉</span>\n                            )}\n                          </div>\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n\n              {/* Paginering */}\n              <div className=\"flex items-center justify-between mt-4\">\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-sm text-muted-foreground\">Visa:</span>\n                  <Select\n                    value={pageSize.toString()}\n                    onValueChange={(value) => {\n                      setPageSize(Number(value));\n                      setCurrentPage(1);\n                    }}\n                  >\n                    <SelectTrigger className=\"w-[120px]\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {PAGE_SIZE_OPTIONS.map(option => (\n                        <SelectItem key={option.value} value={option.value.toString()}>\n                          {option.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div className=\"flex items-center gap-6\">\n                  <span className=\"text-sm text-muted-foreground\">\n                    Visar {((currentPage - 1) * pageSize) + 1} till {Math.min(currentPage * pageSize, sortedData.length)} av {sortedData.length}\n                  </span>\n                  \n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n                      disabled={currentPage === 1}\n                    >\n                      <ChevronLeft className=\"h-4 w-4\" />\n                    </Button>\n                    \n                    <span className=\"text-sm\">\n                      Sida {currentPage} av {totalPages}\n                    </span>\n                    \n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n                      disabled={currentPage >= totalPages}\n                    >\n                      <ChevronRight className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n          \n          {/* Varning för icke-summerbara metrics */}\n          {selectedMetrics.some(m => METRIC_DEFINITIONS[m]?.category === 'unique_persons') && (\n            <Alert className=\"mt-4 bg-amber-50 border-amber-200\">\n              <AlertCircle className=\"h-4 w-4 text-amber-600\" />\n              <AlertTitle className=\"text-amber-800\">Viktigt om Räckvidd</AlertTitle>\n              <AlertDescription className=\"text-amber-700\">\n                Räckvidd representerar unika personer per månad och kan ALDRIG summeras över månader eller sidor. \n                Värdena i tabellen visar data för den valda månaden.\n              </AlertDescription>\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default MonthlyComparisonView;","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from './components/ui/card';\nimport { Button } from './components/ui/button';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './components/ui/tabs';\nimport { Alert, AlertDescription, AlertTitle } from './components/ui/alert';\nimport { UploadCloud, BarChart3, TrendingUp, Calendar, Info, ArrowLeft } from 'lucide-react';\nimport TimeseriesUploader from './components/TimeseriesUploader';\nimport PageTimeseriesView from './components/PageTimeseriesView';\nimport MonthlyComparisonView from './components/MonthlyComparisonView';\n\nfunction App() {\n  const [hasData, setHasData] = useState(false);\n  const [showUploader, setShowUploader] = useState(false);\n  const [activeTab, setActiveTab] = useState('upload');\n  const [uploadedPeriods, setUploadedPeriods] = useState([]);\n\n  // Handler för när data har laddats upp framgångsrikt\n  const handleDataUploaded = (periods) => {\n    console.log('Data uploaded successfully:', periods);\n    setUploadedPeriods(periods);\n    setHasData(true);\n    setShowUploader(false);\n    setActiveTab('monthly'); // Växla till månadsanalys när data finns\n  };\n\n  // Handler för att avbryta upload och gå tillbaka\n  const handleCancelUpload = () => {\n    setShowUploader(false);\n  };\n\n  // Om uploader visas, visa bara den komponenten\n  if (showUploader) {\n    return (\n      <div className=\"min-h-screen bg-background\">\n        <header className=\"border-b border-border\">\n          <div className=\"container py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"facebook-brand flex items-center gap-3\">\n                <BarChart3 className=\"h-8 w-8\" />\n                <h1 className=\"text-2xl font-bold text-foreground\">\n                  Facebook API data analyser\n                </h1>\n              </div>\n              <Button variant=\"outline\" onClick={handleCancelUpload}>\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Tillbaka\n              </Button>\n            </div>\n          </div>\n        </header>\n\n        <main className=\"container py-6\">\n          <TimeseriesUploader \n            onDataUploaded={handleDataUploaded}\n            onCancel={handleCancelUpload}\n          />\n        </main>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <header className=\"border-b border-border\">\n        <div className=\"container py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"facebook-brand flex items-center gap-3\">\n              <BarChart3 className=\"h-8 w-8\" />\n              <h1 className=\"text-2xl font-bold text-foreground\">\n                Facebook API data analyser\n              </h1>\n            </div>\n            <div className=\"text-sm text-muted-foreground\">\n              Tidserie-baserad analys av månadsstatistik\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"container py-6\">\n        <div className=\"grid gap-6\">\n          {/* Informationssektion */}\n          <Alert variant=\"info\" className=\"bg-facebook-50 border-facebook-200\">\n            <Info className=\"h-4 w-4 text-facebook-600\" />\n            <AlertTitle className=\"text-facebook-800\">Välkommen till Facebook API data analyser</AlertTitle>\n            <AlertDescription className=\"text-facebook-700\">\n              <p className=\"mb-2\">\n                Detta verktyg analyserar månadsdata från Facebook API i CSV-format. \n                Ladda upp filer som följer namnkonventionen <code className=\"bg-white px-1 rounded\">FB_YYYY_MM.csv</code> \n                (t.ex. FB_2025_08.csv för Augusti 2025).\n              </p>\n              <p className=\"font-medium\">\n                VIKTIGT: Reach och Engaged Users kan aldrig summeras över månader (unika personer per månad).\n              </p>\n            </AlertDescription>\n          </Alert>\n\n          {!hasData ? (\n            /* Startskärm - när ingen data är uppladdad */\n            <div className=\"grid gap-6\">\n              <Card className=\"timeseries-card\">\n                <CardHeader className=\"text-center\">\n                  <UploadCloud className=\"h-16 w-16 mx-auto mb-4 text-facebook-500\" />\n                  <CardTitle className=\"text-2xl\">Börja med att ladda upp CSV-filer</CardTitle>\n                  <p className=\"text-muted-foreground\">\n                    Ladda upp en eller flera månads-CSV:er för att börja analysera Facebook-data över tid\n                  </p>\n                </CardHeader>\n                <CardContent className=\"text-center\">\n                  <Button \n                    variant=\"facebook\" \n                    size=\"lg\" \n                    onClick={() => setShowUploader(true)}\n                  >\n                    <UploadCloud className=\"mr-2 h-5 w-5\" />\n                    Ladda upp CSV-filer\n                  </Button>\n                </CardContent>\n              </Card>\n\n              {/* Förhandsvisning av kommande funktionalitet */}\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <Card className=\"opacity-50\">\n                  <CardHeader>\n                    <Calendar className=\"h-8 w-8 text-facebook-500 mb-2\" />\n                    <CardTitle className=\"text-lg\">Månadsanalys</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Analysera prestanda för specifika månader och jämför mellan perioder\n                    </p>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"opacity-50\">\n                  <CardHeader>\n                    <TrendingUp className=\"h-8 w-8 text-facebook-500 mb-2\" />\n                    <CardTitle className=\"text-lg\">Trendanalys</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Upptäck trender och utvecklingsmönster över tid för alla Facebook-sidor\n                    </p>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"opacity-50\">\n                  <CardHeader>\n                    <BarChart3 className=\"h-8 w-8 text-facebook-500 mb-2\" />\n                    <CardTitle className=\"text-lg\">Sidanalys</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Djupdyk i specifika Facebook-sidor och deras utveckling över månader\n                    </p>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          ) : (\n            /* Huvudgränssnitt - när data finns */\n            <div className=\"grid gap-6\">\n              {/* Data-status sektion */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <BarChart3 className=\"h-5 w-5 text-facebook-500\" />\n                    Uppladdad data\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid md:grid-cols-3 gap-4\">\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-facebook-600\">\n                        {uploadedPeriods.length}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Månader</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <div className=\"text-2xl font-bold text-facebook-600\">\n                        {uploadedPeriods.reduce((total, period) => total + (period.pageCount || 0), 0)}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Totalt sidposter</div>\n                    </div>\n                    <div className=\"text-center\">\n                      <Button \n                        variant=\"outline\" \n                        onClick={() => setShowUploader(true)}\n                        className=\"w-full\"\n                      >\n                        <UploadCloud className=\"mr-2 h-4 w-4\" />\n                        Ladda mer data\n                      </Button>\n                    </div>\n                  </div>\n                  \n                  {uploadedPeriods.length > 0 && (\n                    <div className=\"mt-4 pt-4 border-t\">\n                      <h4 className=\"text-sm font-medium mb-2\">Uppladdade perioder:</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {uploadedPeriods.map((period, index) => (\n                          <span \n                            key={index}\n                            className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-facebook-50 text-facebook-700 border border-facebook-200\"\n                          >\n                            {period.displayName} ({period.pageCount} sidor)\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n\n              <Tabs value={activeTab} onValueChange={setActiveTab}>\n                <TabsList className=\"grid w-full grid-cols-4\">\n                  <TabsTrigger value=\"upload\">\n                    <UploadCloud className=\"mr-2 h-4 w-4\" />\n                    Ladda data\n                  </TabsTrigger>\n                  <TabsTrigger value=\"monthly\">\n                    <Calendar className=\"mr-2 h-4 w-4\" />\n                    Månadsanalys\n                  </TabsTrigger>\n                  <TabsTrigger value=\"pages\">\n                    <BarChart3 className=\"mr-2 h-4 w-4\" />\n                    Sidanalys\n                  </TabsTrigger>\n                  <TabsTrigger value=\"trends\">\n                    <TrendingUp className=\"mr-2 h-4 w-4\" />\n                    Trender\n                  </TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"upload\" className=\"mt-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Hantera CSV-data</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                      <p className=\"text-muted-foreground\">\n                        Hantera dina uppladdade CSV-filer och ladda upp ytterligare månadsdata.\n                      </p>\n                      <Button onClick={() => setShowUploader(true)}>\n                        <UploadCloud className=\"mr-2 h-4 w-4\" />\n                        Ladda upp mer data\n                      </Button>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"monthly\" className=\"mt-6\">\n                  <MonthlyComparisonView uploadedPeriods={uploadedPeriods} />\n                </TabsContent>\n\n                <TabsContent value=\"pages\" className=\"mt-6\">\n                  <PageTimeseriesView uploadedPeriods={uploadedPeriods} />\n                </TabsContent>\n\n                <TabsContent value=\"trends\" className=\"mt-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Trendanalys</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-muted-foreground mb-4\">\n                        TrendAnalysisView implementeras i FAS 7\n                      </p>\n                      {uploadedPeriods.length > 1 && (\n                        <div className=\"text-sm text-muted-foreground\">\n                          Trendanalys tillgänglig för {uploadedPeriods.length} månader\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n              </Tabs>\n            </div>\n          )}\n        </div>\n      </main>\n\n      <footer className=\"border-t border-border mt-12\">\n        <div className=\"container py-4 text-center text-sm text-muted-foreground\">\n          <p>Facebook API data analyser © {new Date().getFullYear()}</p>\n          <p className=\"mt-1\">\n            Tidserie-baserad analys av månadsstatistik | \n            <span className=\"text-facebook-500 font-medium\"> Utvecklad för projektfas 1-8</span>\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.jsx'\nimport './styles/globals.css'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"names":["m","require$$0","client","cn","inputs","twMerge","clsx","Card","React.forwardRef","className","props","ref","jsx","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","falsyToString","value","cx","cva","base","config","_config_compoundVariants","variants","defaultVariants","getVariantClassNames","variant","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","acc","param","key","getCompoundVariantClassNames","cvClass","cvClassName","compoundVariantOptions","buttonVariants","Button","size","asChild","Comp","Slot","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","alertVariants","Alert","AlertTitle","AlertDescription","EXPECTED_COLUMNS","TimeseriesUploader","onDataUploaded","onCancel","files","setFiles","useState","uploading","setUploading","dragActive","setDragActive","validationErrors","setValidationErrors","processingStatus","setProcessingStatus","fileInputRef","useRef","validateFilename","filename","pattern","match","year","month","getMonthName","validateCSVContent","content","resolve","Papa","results","headers","missingColumns","col","handleDrop","e","droppedFiles","csvFiles","file","prev","addFiles","handleFileSelect","selectedFiles","newFiles","validatedFiles","validation","existingNames","f","duplicates","d","uniqueFiles","removeFile","fileId","processFiles","validFiles","processedPeriods","fileItem","readFileContent","periodData","error","reject","reader","handleDragOver","handleDragLeave","clearErrors","validFilesCount","hasValidFiles","jsxs","Upload","_a","AlertCircle","index","status","FileText","Calendar","Loader2","CheckCircle2","X","Fragment","BarChart3","Table","TableHeader","TableBody","TableRow","TableHead","TableCell","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","children","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","Check","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","CHANNEL_COLORS","ProfileIcon","pageName","name","backgroundColor","channelText","nameLower","textColor","PAGE_SIZE_OPTIONS","AVAILABLE_METRICS","METRIC_DEFINITIONS","PageTimeseriesView","uploadedPeriods","availablePages","setAvailablePages","selectedPageId","setSelectedPageId","pageTimeseriesData","setPageTimeseriesData","loading","setLoading","setError","pageStats","setPageStats","trendAnalysis","setTrendAnalysis","sortConfig","setSortConfig","currentPage","setCurrentPage","pageSize","setPageSize","selectedMetrics","setSelectedMetrics","useEffect","pagesMap","period","csvRow","pageId","pages","a","b","err","pageData","pageRow","parseNumericValue","selectedPage","p","sortedData","calculatePageStatistics","parsed","data","stats","availableMetricKeys","metric","values","v","avg","sum","val","min","max","bestMonth","worstMonth","trends","oldestValue","_b","change","_c","percentChange","useMemo","aValue","bValue","comparison","paginatedData","startIndex","totalPages","handleSort","current","getSortIcon","columnKey","ArrowUpDown","ArrowUp","ArrowDown","handleMetricToggle","metricKey","handleExportCSV","def","csvData","item","csvContent","row","blob","link","url","formatValue","Activity","page","isSelected","trend","definition","TrendingUp","TrendingDown","FileDown","option","ChevronLeft","ChevronRight","MonthlyComparisonView","selectedPeriod","setSelectedPeriod","setPeriodData","periodSummary","setPeriodSummary","firstPeriod","matchingPeriod","convertedData","summary","calculatePeriodSummary","total","periodName","metricData","App","hasData","setHasData","showUploader","setShowUploader","activeTab","setActiveTab","setUploadedPeriods","handleDataUploaded","periods","handleCancelUpload","ArrowLeft","Info","UploadCloud","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,3]}